/* ====================== flexx.ui.widgets._media =======================*/

/* Autogenerated code from Flexx. Code Subject to the BSD-2-clause license. */



flexx.define("flexx.ui.widgets._media", ["pyscript-std.js", "flexx.ui._widget"], function (_py, flexx_ui__widget) {

"use strict";

var _pyfunc_zip = _py._pyfunc_zip, _pyfunc_pow = _py._pyfunc_pow, _pyfunc_reversed = _py._pyfunc_reversed, _pyfunc_dict = _py._pyfunc_dict, _pyfunc_any = _py._pyfunc_any, _pyfunc_op_equals = _py._pyfunc_op_equals, _pyfunc_list = _py._pyfunc_list, _pyfunc_enumerate = _py._pyfunc_enumerate, _pyfunc_setattr = _py._pyfunc_setattr, _pyfunc_time = _py._pyfunc_time, _pyfunc_truthy = _py._pyfunc_truthy, _pyfunc_op_instantiate = _py._pyfunc_op_instantiate, _pyfunc_perf_counter = _py._pyfunc_perf_counter, _pyfunc_int = _py._pyfunc_int, _pyfunc_float = _py._pyfunc_float, _pyfunc_sum = _py._pyfunc_sum, _pyfunc_op_mult = _py._pyfunc_op_mult, _pyfunc_sorted = _py._pyfunc_sorted, _pyfunc_filter = _py._pyfunc_filter, _pyfunc_hasattr = _py._pyfunc_hasattr, _pyfunc_op_add = _py._pyfunc_op_add, _pyfunc_bool = _py._pyfunc_bool, _pyfunc_abs = _py._pyfunc_abs, _pyfunc_op_contains = _py._pyfunc_op_contains, _pyfunc_all = _py._pyfunc_all, _pyfunc_getattr = _py._pyfunc_getattr, _pyfunc_range = _py._pyfunc_range, _pyfunc_divmod = _py._pyfunc_divmod, _pyfunc_round = _py._pyfunc_round, _pyfunc_delattr = _py._pyfunc_delattr, _pyfunc_map = _py._pyfunc_map, _pyfunc_str = _py._pyfunc_str, _pyfunc_repr = _py._pyfunc_repr;
var _pymeth_remove = _py._pymeth_remove, _pymeth_index = _py._pymeth_index, _pymeth_capitalize = _py._pymeth_capitalize, _pymeth_isnumeric = _py._pymeth_isnumeric, _pymeth_isalpha = _py._pymeth_isalpha, _pymeth_partition = _py._pymeth_partition, _pymeth_rstrip = _py._pymeth_rstrip, _pymeth_repeat = _py._pymeth_repeat, _pymeth_setdefault = _py._pymeth_setdefault, _pymeth_islower = _py._pymeth_islower, _pymeth_casefold = _py._pymeth_casefold, _pymeth_isupper = _py._pymeth_isupper, _pymeth_swapcase = _py._pymeth_swapcase, _pymeth_extend = _py._pymeth_extend, _pymeth_lstrip = _py._pymeth_lstrip, _pymeth_clear = _py._pymeth_clear, _pymeth_isidentifier = _py._pymeth_isidentifier, _pymeth_zfill = _py._pymeth_zfill, _pymeth_popitem = _py._pymeth_popitem, _pymeth_split = _py._pymeth_split, _pymeth_reverse = _py._pymeth_reverse, _pymeth_isspace = _py._pymeth_isspace, _pymeth_rjust = _py._pymeth_rjust, _pymeth_values = _py._pymeth_values, _pymeth_sort = _py._pymeth_sort, _pymeth_copy = _py._pymeth_copy, _pymeth_endswith = _py._pymeth_endswith, _pymeth_replace = _py._pymeth_replace, _pymeth_rindex = _py._pymeth_rindex, _pymeth_rpartition = _py._pymeth_rpartition, _pymeth_title = _py._pymeth_title, _pymeth_join = _py._pymeth_join, _pymeth_splitlines = _py._pymeth_splitlines, _pymeth_rsplit = _py._pymeth_rsplit, _pymeth_startswith = _py._pymeth_startswith, _pymeth_expandtabs = _py._pymeth_expandtabs, _pymeth_keys = _py._pymeth_keys, _pymeth_append = _py._pymeth_append, _pymeth_lower = _py._pymeth_lower, _pymeth_isalnum = _py._pymeth_isalnum, _pymeth_items = _py._pymeth_items, _pymeth_count = _py._pymeth_count, _pymeth_get = _py._pymeth_get, _pymeth_translate = _py._pymeth_translate, _pymeth_center = _py._pymeth_center, _pymeth_find = _py._pymeth_find, _pymeth_update = _py._pymeth_update, _pymeth_ljust = _py._pymeth_ljust, _pymeth_istitle = _py._pymeth_istitle, _pymeth_upper = _py._pymeth_upper, _pymeth_insert = _py._pymeth_insert, _pymeth_pop = _py._pymeth_pop, _pymeth_strip = _py._pymeth_strip, _pymeth_rfind = _py._pymeth_rfind;





var ImageWidget = flexx.classes.ImageWidget = function () {
    _pyfunc_op_instantiate(this, arguments);
}
ImageWidget.prototype = Object.create(flexx.classes.Widget.prototype);
ImageWidget.prototype._base_class = flexx.classes.Widget.prototype;
ImageWidget.prototype._class_name = "ImageWidget";

ImageWidget.prototype.__emitters__ = ["key_down", "key_press", "key_up", "mouse_down", "mouse_move", "mouse_up", "mouse_wheel"];
ImageWidget.prototype.__handlers__ = ["_ImageWidget__resize_image", "_ImageWidget__source_changed", "_Widget__children_changed", "_Widget__container_changed", "_Widget__css_class_changed", "_Widget__icon_changed", "_Widget__make_singleton_container_widgets_work", "_Widget__style_changed", "_Widget__title_changed", "_Widget__update_tabindex", "check_size"];
ImageWidget.prototype.__local_properties__ = ["parent", "size"];
ImageWidget.prototype.__properties__ = ["base_size", "children", "container", "css_class", "flex", "icon", "parent", "pos", "size", "source", "stretch", "style", "tabindex", "title"];

ImageWidget.prototype._ImageWidget__resize_image = function () {
    var events, size;
    events = Array.prototype.slice.call(arguments);
    size = this.size;
    if (_pyfunc_truthy(this.stretch)) {
        this.node.style.maxWidth = null;
        this.node.style.maxHeight = null;
        this.node.style.width = size[0] + "px";
        this.node.style.height = size[1] + "px";
    } else {
        this.node.style.maxWidth = size[0] + "px";
        this.node.style.maxHeight = size[1] + "px";
        this.node.style.width = null;
        this.node.style.height = null;
    }
    return null;
};
ImageWidget.prototype._ImageWidget__resize_image.nobind = true;
ImageWidget.prototype._ImageWidget__resize_image._connection_strings = ["size", "stretch"];

ImageWidget.prototype._ImageWidget__source_changed = function () {
    var events;
    events = Array.prototype.slice.call(arguments);
    this.node.src = this.source;
    return null;
};
ImageWidget.prototype._ImageWidget__source_changed.nobind = true;
ImageWidget.prototype._ImageWidget__source_changed._connection_strings = ["source"];

ImageWidget.prototype._init_phosphor_and_node = function () {
    this.phosphor = this._create_phosphor_widget("div");
    this.node = window.document.createElement("img");
    this.phosphor.node.appendChild(this.node);
    return null;
};

ImageWidget.prototype.source = function (v) {
    v = (v === undefined) ? "": v;
    return _pyfunc_str(v);
};
ImageWidget.prototype.source.nobind = true;
ImageWidget.prototype.source.default = "";
ImageWidget.prototype.source.emitter_type = "Property";

ImageWidget.prototype.stretch = function (v) {
    v = (v === undefined) ? false: v;
    return _pyfunc_bool(v);
};
ImageWidget.prototype.stretch.nobind = true;
ImageWidget.prototype.stretch.default = false;
ImageWidget.prototype.stretch.emitter_type = "Property";



var VideoWidget = flexx.classes.VideoWidget = function () {
    _pyfunc_op_instantiate(this, arguments);
}
VideoWidget.prototype = Object.create(flexx.classes.Widget.prototype);
VideoWidget.prototype._base_class = flexx.classes.Widget.prototype;
VideoWidget.prototype._class_name = "VideoWidget";

VideoWidget.prototype.__emitters__ = ["key_down", "key_press", "key_up", "mouse_down", "mouse_move", "mouse_up", "mouse_wheel"];
VideoWidget.prototype.__handlers__ = ["_VideoWidget__source_changed", "_Widget__children_changed", "_Widget__container_changed", "_Widget__css_class_changed", "_Widget__icon_changed", "_Widget__make_singleton_container_widgets_work", "_Widget__style_changed", "_Widget__title_changed", "_Widget__update_tabindex", "check_size"];
VideoWidget.prototype.__local_properties__ = ["parent", "size"];
VideoWidget.prototype.__properties__ = ["base_size", "children", "container", "css_class", "flex", "icon", "parent", "pos", "size", "source", "style", "tabindex", "title"];

VideoWidget.prototype._VideoWidget__source_changed = function () {
    var events;
    events = Array.prototype.slice.call(arguments);
    this.src_node.src = this.source;
    this.node.load();
    return null;
};
VideoWidget.prototype._VideoWidget__source_changed.nobind = true;
VideoWidget.prototype._VideoWidget__source_changed._connection_strings = ["source"];

VideoWidget.prototype._init_phosphor_and_node = function () {
    this.phosphor = this._create_phosphor_widget("video");
    this.node = this.phosphor.node;
    this.node.controls = "controls";
    this.node.innerHTML = "Your browser does not support HTML5 video.";
    this.src_node = window.document.createElement("source");
    this.src_node.type = "video/mp4";
    this.node.appendChild(this.src_node);
    return null;
};

VideoWidget.prototype.source = function (v) {
    v = (v === undefined) ? "": v;
    return _pyfunc_str(v);
};
VideoWidget.prototype.source.nobind = true;
VideoWidget.prototype.source.default = "";
VideoWidget.prototype.source.emitter_type = "Property";



var YoutubeWidget = flexx.classes.YoutubeWidget = function () {
    _pyfunc_op_instantiate(this, arguments);
}
YoutubeWidget.prototype = Object.create(flexx.classes.Widget.prototype);
YoutubeWidget.prototype._base_class = flexx.classes.Widget.prototype;
YoutubeWidget.prototype._class_name = "YoutubeWidget";

YoutubeWidget.prototype.__emitters__ = ["key_down", "key_press", "key_up", "mouse_down", "mouse_move", "mouse_up", "mouse_wheel"];
YoutubeWidget.prototype.__handlers__ = ["_Widget__children_changed", "_Widget__container_changed", "_Widget__css_class_changed", "_Widget__icon_changed", "_Widget__make_singleton_container_widgets_work", "_Widget__style_changed", "_Widget__title_changed", "_Widget__update_tabindex", "_YoutubeWidget__source_changed", "_hide_overlay", "_update_canvas_size", "check_size"];
YoutubeWidget.prototype.__local_properties__ = ["parent", "size"];
YoutubeWidget.prototype.__properties__ = ["base_size", "children", "container", "css_class", "flex", "icon", "parent", "pos", "size", "source", "style", "tabindex", "title"];

YoutubeWidget.prototype._YoutubeWidget__source_changed = function () {
    var base_url, events;
    events = Array.prototype.slice.call(arguments);
    base_url = "http://www.youtube.com/embed/";
    this.inode.src = _pyfunc_op_add(base_url, this.source) + "?autoplay=0";
    return null;
};
YoutubeWidget.prototype._YoutubeWidget__source_changed.nobind = true;
YoutubeWidget.prototype._YoutubeWidget__source_changed._connection_strings = ["source"];

YoutubeWidget.prototype._hide_overlay = function () {
    var ev, events;
    events = Array.prototype.slice.call(arguments);
    ev = events[events.length -1];
    if ((!_pyfunc_truthy(ev.buttons))) {
        this.overlay_node.style.width = "0px";
    }
    return null;
};
YoutubeWidget.prototype._hide_overlay.nobind = true;
YoutubeWidget.prototype._hide_overlay._connection_strings = ["mouse_move", "mouse_down"];

YoutubeWidget.prototype._init_phosphor_and_node = function () {
    this.phosphor = this._create_phosphor_widget("div");
    this.inode = window.document.createElement("iframe");
    this.phosphor.node.appendChild(this.inode);
    this.inode.style.margin = "5px";
    this.overlay_node = window.document.createElement("div");
    this.phosphor.node.appendChild(this.overlay_node);
    this.overlay_node.style.position = "absolute";
    this.overlay_node.style.opacity = "0.0";
    this.overlay_node.style.top = "0px";
    this.overlay_node.style.left = "0px";
    this.node = this.overlay_node;
    this.phosphor.node.addEventListener("mouseenter", this._show_overlay, false);
    return null;
};

YoutubeWidget.prototype._show_overlay = function () {
    this.overlay_node.style.width = this.size[0] + "px";
    return null;
};

YoutubeWidget.prototype._update_canvas_size = function () {
    var events, size;
    events = Array.prototype.slice.call(arguments);
    size = this.size;
    if (_pyfunc_truthy(_pyfunc_truthy(size[0]) || size[1])) {
        this.inode.style.width = size[0] + "px";
        this.inode.style.height = size[1] + "px";
        this.overlay_node.style.width = size[0] + "px";
        this.overlay_node.style.height = size[1] + "px";
    }
    return null;
};
YoutubeWidget.prototype._update_canvas_size.nobind = true;
YoutubeWidget.prototype._update_canvas_size._connection_strings = ["size"];

YoutubeWidget.prototype.source = function (v) {
    v = (v === undefined) ? "oHg5SJYRHA0": v;
    return _pyfunc_str(v);
};
YoutubeWidget.prototype.source.nobind = true;
YoutubeWidget.prototype.source.default = "oHg5SJYRHA0";
YoutubeWidget.prototype.source.emitter_type = "Property";



return {ImageWidget: ImageWidget, VideoWidget: VideoWidget, YoutubeWidget: YoutubeWidget};
});
